/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var area = /* color: #d63000 */ee.Geometry.Polygon(
        [[[8.548637448606383, 2.4297201530217922],
          [8.241020261106383, -1.4365882374170018],
          [10.042778073606383, -3.587712262183992],
          [11.536918698606383, -5.908659743447714],
          [12.679496823606383, -6.694889381853155],
          [13.734184323606383, -5.690057912052857],
          [14.569145261106383, -3.8508285734975387],
          [15.184379636106383, -2.3589236476111446],
          [16.546684323606385, -3.23677358836229],
          [18.436332761106385, -5.165080341948719],
          [20.633598386106385, -7.043927580297406],
          [23.226371823606385, -6.563934977095235],
          [26.43437963610638, -6.127175292342542],
          [29.20293432360638, -4.989988954236896],
          [29.95000463610638, -3.1928974346931227],
          [30.60918432360638, -0.7775352295012443],
          [31.40019994860638, 1.2438275701343542],
          [31.04863744860638, 2.737024337018606],
          [28.63164526110638, 4.228363159409433],
          [26.08281713610638, 5.935429171983002],
          [24.06133276110638, 6.110240067888822],
          [18.831840573606385, 5.060574951333455],
          [16.239067136106385, 5.1481170215671455],
          [14.744926511106383, 4.754085748535942],
          [14.613090573606383, 5.629377604889694],
          [13.426567136106383, 6.241310871155093],
          [11.273246823606383, 5.89171771829204],
          [9.559379636106383, 7.1578507025032945],
          [8.021293698606383, 6.590670899530301],
          [7.537895261106384, 4.403645851145316]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Fusion Near Real-time
// Near real-time monitoring of forest disturbance by fusion of multi-sensor data

// Model settings and parameters (Central Africa)
var params = {
  forestMask: ee.ImageCollection('ESA/WorldCover/v200').first().eq(10),
  biomeMask: ee.Image('projects/fusionnrt/assets/misc/biome_mask'),
  pastMask: ee.ImageCollection('projects/fusionnrt/assets/archive/alerts_2024')
              .mosaic().select('Deforestaion').unmask().eq(0),
  grid: ee.FeatureCollection('projects/fusionnrt/assets/misc/GLANCE_V01_AF_GEOG_TILE')
          .filterMetadata('land', 'equals', 1),
  area: area,
  //wd: 'projects/bu-nearrealtime/africa/',
  wd: 'projects/fusionnrt/assets/africa/',
  proj: 'EPSG:4326',
  bucket: 'fnrt-africa',
  cloud: false
};

// ---------------------------------------------------------------
// Study Time Period
params.period = {};

params.period.training = {
  start: '2022-01-01',
  end: '2024-12-31'
};

params.period.monitor = {
  start: '2025-01-01',
  end: '2025-12-31'
};

params.period.full = {
  start: params.period.training.start,
  end: params.period.monitor.end
};

params.period.alert = {
  start: '2025-01-01',
  end: '2025-12-31'
};

// ---------------------------------------------------------------
// Training Parameters
params.training = {};

params.training.S2 = {
  sensor: 'Sentinel-2',
  short: 'S2',
  band: 'NDFI',
  res: 20,
  harmonics: 3,
  enable: true
};

params.training.S1 = {
  sensor: 'Sentinel-1',
  short: 'S1',
  band: 'VH',
  res: 10,
  enable: true,
  harmonics: 1,
  minImage: 20
};

params.training.LST = {
  sensor: 'Landsat',
  short: 'LST',
  band: 'NDFI',
  res: 30,
  looseMasking: true,
  harmonics: 3,
  enable: true
};

// ---------------------------------------------------------------
// Monitoring Parameters
params.monitor = {
    strikeOut: 4,
    monitorWindow: 5,
    maxZ: 25,
    res: 20,
    recover: false,
    resume: true,
    minSize: 25
  };
  
params.monitor.S2 = {
  sensor: 'Sentinel-2',
  short: 'S2',
  id: 2,
  zThres: 3.5,
  directional: 1,
  changeOnly: false,
  minRMSE: 250,
  maxValue: 10000
};

params.monitor.S1 = {
  sensor: 'Sentinel-1',
  short: 'S1',
  id: 3,
  zThres: 2.25,
  directional: 1,
  changeOnly: true,
  minRMSE: 0.01,
};

params.monitor.LST = {
  sensor: 'Landsat',
  short: 'LST',
  id: 1,
  zThres: 3.5,
  directional: 1,
  changeOnly: false,
  minRMSE: 250,
  maxValue: 10000
};

// ---------------------------------------------------------------
// Sentinel-1 Preprocessing Parameters
params.preprocess = {};

params.preprocess.S1 = {
  bands: ['VH', 'VV', 'ratio', 'angle'],
  orbit: 'Both', // Auto, Both, Ascending, or Descending
  model: 'volume', // volume, surface, or direct
  elevation: ee.Image('USGS/SRTMGL1_003'),
  buffer: 30,
  rawPower: false,
  splitOrbit: true,
  normScale: 10,
  scaleFactor: 30,
  edgeMask: -30 
};

// ---------------------------------------------------------------
// Endmembers
params.preprocess.endMembers = {
  gv: [500, 900, 400, 6100, 3000, 1000],
  npv: [1400, 1700, 2200, 3000, 5500, 3000],
  soil: [2000, 3000, 3400, 5800, 6000, 5800],
  shade: [0, 0, 0, 0, 0, 0],
  cloud: [9000, 9600, 8000, 7800, 7200, 6500],
  cfThreshold: 0.05
};

// ---------------------------------------------------------------
// Visualization Parameters
params.visual = {};

params.visual.S2 = {
  sensor: 'Sentinel-2',
  short: 'S2',
  bands: ['SWIR1', 'NIR', 'RED'],
  min: 0,
  max: 5000
};

params.visual.S1 = {
  sensor: 'Sentinel-1',
  short: 'S1',
  bands: ['VV', 'VH', 'ratio'],
  min: 10,
  max: 30
};

params.visual.LST = {
  sensor: 'Landsat',
  short: 'LST',
  bands: ['SWIR1', 'NIR', 'RED'],
  min: 0,
  max: 5000
};

params.visual.mask = {
  min: 0,
  max: 1,
  palette: ['blue']
};

var toFracYear = function(date) {
  var year = date.get('year');
  var fYear = date.difference(ee.Date.fromYMD(year, 1, 1), 'year');
  return year.add(fYear);
};

params.visual.alerts = {
  //min: toFracYear(ee.Date(params.period.monitor.start)).getInfo(),
  //max: toFracYear(ee.Date(params.period.monitor.end)).getInfo(),
  min: 0,
  max: 365,
  palette: ['#ffffcc','#ffeda0','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026']
};

// ---------------------------------------------------------------
// Plotting Parameters
params.plot = {};
params.plot.dateFormat = 1;
params.plot.padding = 0.2;

// ---------------------------------------------------------------
// Posible Driver Parameters
params.driver = {};
params.driver.size = 3500;

// ---------------------------------------------------------------
// Other Parameters
params.protectedArea = ee.FeatureCollection("WCMC/WDPA/current/polygons")
                      .filterBounds(params.area);

// ---------------------------------------------------------------
// Exports
// print(params);
exports = {
  params: params
};

// End